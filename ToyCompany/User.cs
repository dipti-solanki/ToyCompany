//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToyCompany
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.Addresses = new HashSet<Address>();
            this.Orders = new HashSet<Order>();
        }
    
        public int UserId { get; set; }
        public string UserName { get; set; }
        public string EmailAddress { get; set; }
        public string MobileNumber { get; set; }
        public string UserAddress { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Address> Addresses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Orders { get; set; }
        ToyCompanyDbEntities db = new ToyCompanyDbEntities();
        public void getDetails()
        {
            Console.WriteLine("Enter your full name");
            UserName = Console.ReadLine();
            Console.WriteLine("Please enter your email address");
            EmailAddress=Console.ReadLine();
            Console.WriteLine("Please enter you mobile nmuber");
            MobileNumber = Console.ReadLine();
            Console.WriteLine("Please enter your residential address");
            UserAddress = Console.ReadLine();
            
        }
        public void Add()
        {
            using(db)
            {
                var user = new User();
                this.getDetails();
                var check = db.Users.SingleOrDefault(t => t.EmailAddress == EmailAddress);
                if(check==null)
                {
                    try {
                        db.Users.Add(user);
                        db.SaveChanges();
                        Console.WriteLine("Your Account is successfully created");
                    }
                    catch(Exception e)
                    {
                        Console.WriteLine(e);
                    }
                    
                }
                else
                {
                    Console.WriteLine("Your account already exists");
                }
                  
            }
        }
        public void login()
        {
            using(db)
            {
                Console.WriteLine("Enter your email address");
                EmailAddress = Console.ReadLine();
                var check = db.Users.SingleOrDefault(t => t.EmailAddress == EmailAddress);
                if(check!=null)
                {
                    Console.WriteLine("You have successfully logged in!");
                }
                else
                {
                    Console.WriteLine("Invalid Credentials");
                }
            }
           
        }
    }
}
